{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_march_task\\\\menu_task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { CssBaseline, Switch } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst top100Films = [\n  // Your array items here\n];\nexport default function ComboBoxWithThemeToggle() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode: darkMode ? \"dark\" : \"light\"\n    }\n  }), [darkMode]);\n  const handleThemeChange = event => {\n    setDarkMode(event.target.checked);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: darkMode,\n      onChange: handleThemeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \" Toggle Dark Mode\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n      disablePortal: true,\n      id: \"combo-box-demo\",\n      options: top100Films,\n      sx: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ComboBoxWithThemeToggle, \"NyJXBmnKQMG71dNkuIxNhOakC8k=\");\n_c = ComboBoxWithThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ComboBoxWithThemeToggle\");","map":{"version":3,"names":["React","useState","TextField","Autocomplete","createTheme","ThemeProvider","CssBaseline","Switch","jsxDEV","_jsxDEV","top100Films","ComboBoxWithThemeToggle","_s","darkMode","setDarkMode","theme","useMemo","palette","mode","handleThemeChange","event","target","checked","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disablePortal","id","options","sx","width","renderInput","params","label","_c","$RefreshReg$"],"sources":["D:/react_march_task/menu_task/src/App.js"],"sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { CssBaseline, Switch } from \"@mui/material\";\n\nconst top100Films = [\n  // Your array items here\n];\n\nexport default function ComboBoxWithThemeToggle() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: darkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [darkMode]\n  );\n\n  const handleThemeChange = (event) => {\n    setDarkMode(event.target.checked);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch checked={darkMode} onChange={handleThemeChange} /> Toggle Dark\n      Mode\n      <Autocomplete\n        disablePortal\n        id=\"combo-box-demo\"\n        options={top100Films}\n        sx={{ width: 300 }}\n        renderInput={(params) => <TextField {...params} label=\"Movie\" />}\n      />\n    </ThemeProvider>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,WAAW,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAG;EAClB;AAAA,CACD;AAED,eAAe,SAASC,uBAAuBA,CAAA,EAAG;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMc,KAAK,GAAGf,KAAK,CAACgB,OAAO,CACzB,MACEZ,WAAW,CAAC;IACVa,OAAO,EAAE;MACPC,IAAI,EAAEL,QAAQ,GAAG,MAAM,GAAG;IAC5B;EACF,CAAC,CAAC,EACJ,CAACA,QAAQ,CACX,CAAC;EAED,MAAMM,iBAAiB,GAAIC,KAAK,IAAK;IACnCN,WAAW,CAACM,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC;EACnC,CAAC;EAED,oBACEb,OAAA,CAACJ,aAAa;IAACU,KAAK,EAAEA,KAAM;IAAAQ,QAAA,gBAC1Bd,OAAA,CAACH,WAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACflB,OAAA,CAACF,MAAM;MAACe,OAAO,EAAET,QAAS;MAACe,QAAQ,EAAET;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,qBAE1D,eAAAlB,OAAA,CAACN,YAAY;MACX0B,aAAa;MACbC,EAAE,EAAC,gBAAgB;MACnBC,OAAO,EAAErB,WAAY;MACrBsB,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAI,CAAE;MACnBC,WAAW,EAAGC,MAAM,iBAAK1B,OAAA,CAACP,SAAS;QAAA,GAAKiC,MAAM;QAAEC,KAAK,EAAC;MAAO;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB;AAACf,EAAA,CA/BuBD,uBAAuB;AAAA0B,EAAA,GAAvB1B,uBAAuB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}