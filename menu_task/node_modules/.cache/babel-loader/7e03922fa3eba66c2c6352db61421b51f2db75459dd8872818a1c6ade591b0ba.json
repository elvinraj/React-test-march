{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_march_task\\\\menu_task\\\\src\\\\componnents\\\\customSelect.js\";\nimport * as React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 14\n}, this);\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 21\n}, this);\nexport default function CheckboxesTags() {\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: true,\n    id: \"checkboxes-tags-demo\",\n    options: top100Films,\n    disableCloseOnSelect: true,\n    getOptionLabel: option => option.title,\n    renderOption: (props, option, {\n      selected\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: icon,\n        checkedIcon: checkedIcon,\n        style: {\n          marginRight: 8\n        },\n        checked: selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), option.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this),\n    style: {\n      width: 500\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Checkboxes\",\n      placeholder: \"Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n_c = CheckboxesTags;\nconst top100Films = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}, {\n  title: \"The Dark Knight\",\n  year: 2008\n}, {\n  title: \"12 Angry Men\",\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: \"Pulp Fiction\",\n  year: 1994\n}, {\n  title: \"The Lord of the Rings: The Return of the King\",\n  year: 2003\n}, {\n  title: \"The Good, the Bad and the Ugly\",\n  year: 1966\n}, {\n  title: \"Fight Club\",\n  year: 1999\n}, {\n  title: \"The Lord of the Rings: The Fellowship of the Ring\",\n  year: 2001\n}, {\n  title: \"Star Wars: Episode V - The Empire Strikes Back\",\n  year: 1980\n}, {\n  title: \"Forrest Gump\",\n  year: 1994\n}, {\n  title: \"Inception\",\n  year: 2010\n}, {\n  title: \"The Lord of the Rings: The Two Towers\",\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: \"Goodfellas\",\n  year: 1990\n}, {\n  title: \"The Matrix\",\n  year: 1999\n}, {\n  title: \"Seven Samurai\",\n  year: 1954\n}, {\n  title: \"Star Wars: Episode IV - A New Hope\",\n  year: 1977\n}, {\n  title: \"City of God\",\n  year: 2002\n}, {\n  title: \"Se7en\",\n  year: 1995\n}, {\n  title: \"The Silence of the Lambs\",\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: \"Life Is Beautiful\",\n  year: 1997\n}, {\n  title: \"The Usual Suspects\",\n  year: 1995\n}, {\n  title: \"Léon: The Professional\",\n  year: 1994\n}, {\n  title: \"Spirited Away\",\n  year: 2001\n}, {\n  title: \"Saving Private Ryan\",\n  year: 1998\n}, {\n  title: \"Once Upon a Time in the West\",\n  year: 1968\n}, {\n  title: \"American History X\",\n  year: 1998\n}, {\n  title: \"Interstellar\",\n  year: 2014\n}];\nvar _c;\n$RefreshReg$(_c, \"CheckboxesTags\");","map":{"version":3,"names":["React","Checkbox","TextField","Autocomplete","CheckBoxOutlineBlankIcon","CheckBoxIcon","jsxDEV","_jsxDEV","icon","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","checkedIcon","CheckboxesTags","multiple","id","options","top100Films","disableCloseOnSelect","getOptionLabel","option","title","renderOption","props","selected","children","style","marginRight","checked","width","renderInput","params","label","placeholder","_c","year","$RefreshReg$"],"sources":["D:/react_march_task/menu_task/src/componnents/customSelect.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function CheckboxesTags() {\r\n  return (\r\n    <Autocomplete\r\n      multiple\r\n      id=\"checkboxes-tags-demo\"\r\n      options={top100Films}\r\n      disableCloseOnSelect\r\n      getOptionLabel={(option) => option.title}\r\n      renderOption={(props, option, { selected }) => (\r\n        <li {...props}>\r\n          <Checkbox\r\n            icon={icon}\r\n            checkedIcon={checkedIcon}\r\n            style={{ marginRight: 8 }}\r\n            checked={selected}\r\n          />\r\n          {option.title}\r\n        </li>\r\n      )}\r\n      style={{ width: 500 }}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label=\"Checkboxes\" placeholder=\"Favorites\" />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: \"Pulp Fiction\", year: 1994 },\r\n  {\r\n    title: \"The Lord of the Rings: The Return of the King\",\r\n    year: 2003,\r\n  },\r\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\r\n  { title: \"Fight Club\", year: 1999 },\r\n  {\r\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: \"Star Wars: Episode V - The Empire Strikes Back\",\r\n    year: 1980,\r\n  },\r\n  { title: \"Forrest Gump\", year: 1994 },\r\n  { title: \"Inception\", year: 2010 },\r\n  {\r\n    title: \"The Lord of the Rings: The Two Towers\",\r\n    year: 2002,\r\n  },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: \"Goodfellas\", year: 1990 },\r\n  { title: \"The Matrix\", year: 1999 },\r\n  { title: \"Seven Samurai\", year: 1954 },\r\n  {\r\n    title: \"Star Wars: Episode IV - A New Hope\",\r\n    year: 1977,\r\n  },\r\n  { title: \"City of God\", year: 2002 },\r\n  { title: \"Se7en\", year: 1995 },\r\n  { title: \"The Silence of the Lambs\", year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: \"Life Is Beautiful\", year: 1997 },\r\n  { title: \"The Usual Suspects\", year: 1995 },\r\n  { title: \"Léon: The Professional\", year: 1994 },\r\n  { title: \"Spirited Away\", year: 2001 },\r\n  { title: \"Saving Private Ryan\", year: 1998 },\r\n  { title: \"Once Upon a Time in the West\", year: 1968 },\r\n  { title: \"American History X\", year: 1998 },\r\n  { title: \"Interstellar\", year: 2014 },\r\n];\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}