{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_march_task\\\\menu_task\\\\src\\\\componnents\\\\customSelect.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CheckIcon from \"@mui/icons-material/Check\"; // Import the CheckIcon for the tick mark\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [value, setValue] = React.useState(null); // State to keep track of the selected value\n\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    disablePortal: true,\n    id: \"combo-box-demo\",\n    options: top100Films,\n    sx: {\n      width: 300\n    },\n    value: value // Bind the selected value to the Autocomplete's value\n    ,\n    onChange: (event, newValue) => {\n      setValue(newValue); // Update the selected value when an option is selected\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 32\n    }, this),\n    renderOption: (props, option, {\n      selected\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      ...props,\n      children: [selected ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n        fontSize: \"small\",\n        style: {\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this) : null, option.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n_s(App, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n_c = App;\nconst top100Films = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}, {\n  title: \"The Dark Knight\",\n  year: 2008\n}, {\n  title: \"12 Angry Men\",\n  year: 1957\n}\n//   { title: \"Schindler's List\", year: 1993 },\n//   { title: \"Pulp Fiction\", year: 1994 },\n//   {\n//     title: \"The Lord of the Rings: The Return of the King\",\n//     year: 2003,\n//   },\n//   { title: \"The Good, the Bad and the Ugly\", year: 1966 },\n//   { title: \"Fight Club\", year: 1999 },\n//   {\n//     title: \"The Lord of the Rings: The Fellowship of the Ring\",\n//     year: 2001,\n//   },\n//   {\n//     title: \"Star Wars: Episode V - The Empire Strikes Back\",\n//     year: 1980,\n//   },\n//   { title: \"Forrest Gump\", year: 1994 },\n//   { title: \"Inception\", year: 2010 },\n//   {\n//     title: \"The Lord of the Rings: The Two Towers\",\n//     year: 2002,\n//   },\n//   { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n//   { title: \"Goodfellas\", year: 1990 },\n//   { title: \"The Matrix\", year: 1999 },\n//   { title: \"Seven Samurai\", year: 1954 },\n//   {\n//     title: \"Star Wars: Episode IV - A New Hope\",\n//     year: 1977,\n//   },\n//   { title: \"City of God\", year: 2002 },\n//   { title: \"Se7en\", year: 1995 },\n//   { title: \"The Silence of the Lambs\", year: 1991 },\n//   { title: \"It's a Wonderful Life\", year: 1946 },\n//   { title: \"Life Is Beautiful\", year: 1997 },\n//   { title: \"The Usual Suspects\", year: 1995 },\n//   { title: \"Léon: The Professional\", year: 1994 },\n//   { title: \"Spirited Away\", year: 2001 },\n//   { title: \"Saving Private Ryan\", year: 1998 },\n//   { title: \"Once Upon a Time in the West\", year: 1968 },\n//   { title: \"American History X\", year: 1998 },\n//   { title: \"Interstellar\", year: 2014 },\n];\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","TextField","Autocomplete","CheckIcon","jsxDEV","_jsxDEV","App","_s","value","setValue","useState","disablePortal","id","options","top100Films","sx","width","onChange","event","newValue","renderInput","params","label","fileName","_jsxFileName","lineNumber","columnNumber","renderOption","props","option","selected","children","fontSize","style","marginRight","_c","title","year","$RefreshReg$"],"sources":["D:/react_march_task/menu_task/src/componnents/customSelect.js"],"sourcesContent":["import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport CheckIcon from \"@mui/icons-material/Check\"; // Import the CheckIcon for the tick mark\r\n\r\nexport default function App() {\r\n  const [value, setValue] = React.useState(null); // State to keep track of the selected value\r\n\r\n  return (\r\n    <Autocomplete\r\n      disablePortal\r\n      id=\"combo-box-demo\"\r\n      options={top100Films}\r\n      sx={{ width: 300 }}\r\n      value={value} // Bind the selected value to the Autocomplete's value\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue); // Update the selected value when an option is selected\r\n      }}\r\n      renderInput={(params) => <TextField {...params} label=\"Movie\" />}\r\n      renderOption={(props, option, { selected }) => (\r\n        <li {...props}>\r\n          {selected ? (\r\n            <CheckIcon fontSize=\"small\" style={{ marginRight: 8 }} />\r\n          ) : null}\r\n          {option.label}\r\n        </li>\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  //   { title: \"Schindler's List\", year: 1993 },\r\n  //   { title: \"Pulp Fiction\", year: 1994 },\r\n  //   {\r\n  //     title: \"The Lord of the Rings: The Return of the King\",\r\n  //     year: 2003,\r\n  //   },\r\n  //   { title: \"The Good, the Bad and the Ugly\", year: 1966 },\r\n  //   { title: \"Fight Club\", year: 1999 },\r\n  //   {\r\n  //     title: \"The Lord of the Rings: The Fellowship of the Ring\",\r\n  //     year: 2001,\r\n  //   },\r\n  //   {\r\n  //     title: \"Star Wars: Episode V - The Empire Strikes Back\",\r\n  //     year: 1980,\r\n  //   },\r\n  //   { title: \"Forrest Gump\", year: 1994 },\r\n  //   { title: \"Inception\", year: 2010 },\r\n  //   {\r\n  //     title: \"The Lord of the Rings: The Two Towers\",\r\n  //     year: 2002,\r\n  //   },\r\n  //   { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  //   { title: \"Goodfellas\", year: 1990 },\r\n  //   { title: \"The Matrix\", year: 1999 },\r\n  //   { title: \"Seven Samurai\", year: 1954 },\r\n  //   {\r\n  //     title: \"Star Wars: Episode IV - A New Hope\",\r\n  //     year: 1977,\r\n  //   },\r\n  //   { title: \"City of God\", year: 2002 },\r\n  //   { title: \"Se7en\", year: 1995 },\r\n  //   { title: \"The Silence of the Lambs\", year: 1991 },\r\n  //   { title: \"It's a Wonderful Life\", year: 1946 },\r\n  //   { title: \"Life Is Beautiful\", year: 1997 },\r\n  //   { title: \"The Usual Suspects\", year: 1995 },\r\n  //   { title: \"Léon: The Professional\", year: 1994 },\r\n  //   { title: \"Spirited Away\", year: 2001 },\r\n  //   { title: \"Saving Private Ryan\", year: 1998 },\r\n  //   { title: \"Once Upon a Time in the West\", year: 1968 },\r\n  //   { title: \"American History X\", year: 1998 },\r\n  //   { title: \"Interstellar\", year: 2014 },\r\n];\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD,oBACEL,OAAA,CAACH,YAAY;IACXS,aAAa;IACbC,EAAE,EAAC,gBAAgB;IACnBC,OAAO,EAAEC,WAAY;IACrBC,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAE;IACnBR,KAAK,EAAEA,KAAM,CAAC;IAAA;IACdS,QAAQ,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK;MAC7BV,QAAQ,CAACU,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAE;IACFC,WAAW,EAAGC,MAAM,iBAAKhB,OAAA,CAACJ,SAAS;MAAA,GAAKoB,MAAM;MAAEC,KAAK,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IACjEC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAAEC;IAAS,CAAC,kBACxCzB,OAAA;MAAA,GAAQuB,KAAK;MAAAG,QAAA,GACVD,QAAQ,gBACPzB,OAAA,CAACF,SAAS;QAAC6B,QAAQ,EAAC,OAAO;QAACC,KAAK,EAAE;UAAEC,WAAW,EAAE;QAAE;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GACvD,IAAI,EACPG,MAAM,CAACP,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;;AAEA;AAAAnB,EAAA,CA1BwBD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA2B3B,MAAMQ,WAAW,GAAG,CAClB;EAAEsB,KAAK,EAAE,0BAA0B;EAAEC,IAAI,EAAE;AAAK,CAAC,EACjD;EAAED,KAAK,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAK,CAAC,EACtC;EAAED,KAAK,EAAE,wBAAwB;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC/C;EAAED,KAAK,EAAE,iBAAiB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACxC;EAAED,KAAK,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CACD;AAAC,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}